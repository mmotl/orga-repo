name: Sync Exercise and Solution Notebooks

on:
  pull_request:
    branches:
      - staging   # Trigger workflow for pull requests targeting the staging branch
    types:
      - closed        # Trigger when the pull request is closed

jobs:
  update_notebooks:
    if: github.event.pull_request.merged == true  # Only run if the pull request has been merged
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        pip install nbconvert jupyter nbformat

    # Step 1: Handle changes for the solution branch
    - name: Commit and push changes to the solution branch
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        # Checkout the solution branch
        git checkout solutions

        # Merge changes from the staging branch into the solution branch
        if [ "$(git rev-parse staging)" != "$(git rev-parse solutions)" ]; then
          git merge staging
        else
          echo "No changes to merge from staging to solutions."
        fi

        # Commit changes if there are any
        if [ -n "$(git status --porcelain)" ]; then
          git add .
          git commit -m "Update solutions branch"
        else
          echo "No changes to commit for solutions."
        fi

        # Push changes to the solutions branch
        git push origin solutions || echo "Nothing to push to solutions branch."

    # Step 2: Create a temp-merge branch for handling main updates
    - name: Prepare temp branch for main updates
      run: |
        git checkout -b temp-merge

        # Merge changes from the staging branch into temp-merge
        if [ "$(git rev-parse staging)" != "$(git rev-parse temp-merge)" ]; then
          git merge staging
        else
          echo "No changes to merge from staging to temp-merge."
        fi

        # Remove teacher notebooks from staging area (across all directories)
        if [ "$(find . -name 'teachers_*.ipynb' | wc -l)" -gt 0 ]; then
          find . -name 'teachers_*.ipynb' -exec git rm --cached {} +
        fi

        # Clean up untracked teacher notebooks (ignored files)
        git clean -f -X -e "*.ipynb"  # Exclude .ipynb files in general, but clean untracked teachers_*.ipynb

        # Stage remaining files
        git add .

        # Commit changes for the temp-merge branch
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "Prepare main branch without teacher notebooks"
        else
          echo "No changes to commit for temp-merge."
        fi

    # Step 3: Merge temp-merge into the main branch
    - name: Merge temp-merge into main
      run: |
        git checkout main

        # Merge temp-merge into main
        git merge temp-merge || echo "Nothing to merge."

        # Push the changes to the main branch
        git push origin main || echo "Nothing to push to main branch."

    # Step 4: Strip solutions from notebooks in main branch
    - name: Process Notebooks - Strip Solutions
      run: |
        # Strip solutions from notebooks (cells tagged "Solutions")
        python scripts/strip_solutions.py

    # Step 5: Commit and push the stripped notebooks to main
    - name: Commit and push changes to main branch after stripping solutions
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        # Add all notebooks excluding teacher notebooks
        git add $(git ls-files '*.ipynb' ':!teachers_*.ipynb')

        # Commit changes for the main branch
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "Update main branch with exercises ws"
        else
          echo "No changes to commit after stripping solutions."
        fi

        # Push the changes to the main branch
        git push origin main || echo "Nothing to push to main branch."
